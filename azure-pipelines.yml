# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

# variables:
#   tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     containerRegistry: 'ContainerRegistry-Connection'
    #     repository: 'k8svoteregistry'
    #     command: 'build'
    #     Dockerfile: 'result/Dockerfile'
    #     buildContext: 'result'
    #     tags: 'result'
    
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     containerRegistry: 'ContainerRegistry-Connection'
    #     repository: 'k8svoteregistry'
    #     command: 'build'
    #     Dockerfile: 'vote/Dockerfile'
    #     buildContext: 'vote'
    #     tags: vote
        

    # - task: Bash@3
    #   displayName: Build an image
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       cd vote
    #       docker build -t vote:vote -f ./Dockerfile .
    #       cd ..
    #       cd result
    #       docker build -t result:result -f ./Dockerfile .
    #       ls
    #       cd ..
    #       cd worker
    #       docker build -t worker:worker -f ./Dockerfile .


    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     command: build
    #     dockerfile: '$(Build.SourcesDirectory)/worker/Dockerfile'
    #     tags: |
    #       $(tag)

    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     containerRegistry: 'ContainerRegistry-Connection'
    #     repository: 'k8svoteregistry'
    #     command: 'build'
    #     Dockerfile: 'worker/Dockerfile'
    #     buildContext: 'worker'
    #     tags: 'worker'

    # - task: AzureCLI@2
    #   displayName: Push image to ACR
    #   inputs:
    #     azureSubscription: 'RG-Container-Conn'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: |
    #       az --version
    #       docker images
    #       az account set --subscription YASH-Azure-DevOps-Containerization1-MPN
    #       az acr login --name acrregistrydotnet --username acrregistrydotnet --password svM4eZK2T+1VAph9FLr/F5xNBcdfP4VSFwLXZsd4hR+ACRAovepl
    #       docker tag vote:vote acrregistrydotnet.azurecr.io/vote:vote
    #       docker push acrregistrydotnet.azurecr.io/vote:vote
    #       docker tag result:result acrregistrydotnet.azurecr.ioo/result:result
    #       docker push acrregistrydotnet.azurecr.io/result:result
    #       docker tag worker:worker acrregistrydotnet.azurecr.io/worker:worker
    #       docker push acrregistrydotnet.azurecr.ioo/worker:worker
    
    - task: AzureCLI@2
      displayName: Deploy manifest files
      inputs:
        azureSubscription: 'RG-Container-Conn'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az account set --subscription YASH-Azure-DevOps-Containerization2-MPN
          az aks get-credentials --resource-group RG-Containerization2 --name aks-cluster-002
          cd $(Pipeline.Workspace)/s/k8s-specifications
          kubectl apply -f voting-app-deploy.yaml 
          
          # kubectl apply -f namespace.yaml -f postgres-deploy.yaml -f postgres-service.yaml -f redis-deploy.yaml -f redis-service.yaml -f result-app-deploy.yaml -f result-app-service.yaml -f voting-app-deploy.yaml -f voting-app-service.yaml -f worker-app-deploy.yaml -n votingapp
