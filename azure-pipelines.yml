# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     containerRegistry: 'ContainerRegistry-Connection'
    #     repository: 'k8svoteregistry'
    #     command: 'build'
    #     Dockerfile: 'result/Dockerfile'
    #     buildContext: 'result'
    #     tags: 'result'
    
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     containerRegistry: 'ContainerRegistry-Connection'
    #     repository: 'k8svoteregistry'
    #     command: 'build'
    #     Dockerfile: 'vote/Dockerfile'
    #     buildContext: 'vote'
    #     tags: '$(tag)'
        

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          cd vote
          pwd
          ls
          docker build -t vote:$(tag) -f ./Dockerfile .
          cd ..
          cd result
          docker build -t result:result -f ./Dockerfile .
          ls
          cd ..
          cd worker
          docker build -t worker:worker -f ./Dockerfile .


    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     command: build
    #     dockerfile: '$(Build.SourcesDirectory)/worker/Dockerfile'
    #     tags: |
    #       $(tag)

    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     containerRegistry: 'ContainerRegistry-Connection'
    #     repository: 'k8svoteregistry'
    #     command: 'build'
    #     Dockerfile: 'worker/Dockerfile'
    #     buildContext: 'worker'
    #     tags: 'worker'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'RG-Container-Conn'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az --version
          docker images
          az account set --subscription YASH-Azure-DevOps-Containerization2-MPN
          az acr login --name k8svoteregistry --username k8svoteregistry --password 3dScykJ0yiW8dl2C8YWGNwfnMmnjTrdwFus/IF7ajD+ACRBf7W58
          docker tag vote:$(Build.BuildId) k8svoteregistry.azurecr.io/vote:$(Build.BuildId)
          docker push k8svoteregistry.azurecr.io/vote:$(Build.BuildId)
          docker tag result:result k8svoteregistry.azurecr.io/result:result
          docker push k8svoteregistry.azurecr.io/result:result
          docker tag worker:worker k8svoteregistry.azurecr.io/worker:worker
          docker push k8svoteregistry.azurecr.io/worker:worker
    
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'RG-Container-Conn'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az account set --subscription YASH-Azure-DevOps-Containerization2-MPN
          az aks get-credentials --resource-group RG-Containerization2 --name aks-cluster-002
          cd $(Pipeline.Workspace)/s/k8s-specifications
          kubectl apply -f postgres-deploy.yaml -f postgres-service.yaml -f redis-deploy.yaml -f redis-service.yaml -f result-app-deploy.yaml -f result-app-service.yaml -f voting-app-deploy.yaml -f voting-app-service.yaml -f worker-app-deploy.yaml -f scaledObject-votingapp.yaml -n votingapp1